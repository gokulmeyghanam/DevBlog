name: CI - Next.js Build and Push to ECR

on:
  push:
    branches:
      - main

env:
  AWS_REGION: eu-north-1
  AWS_ACCESS_KEY_ID: AKIAQ3EGS2DKBGBICEHR
  AWS_SECRET_ACCESS_KEY: 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
  ECR_REGISTRY: 058264309972.dkr.ecr.eu-north-1.amazonaws.com
  ECR_REPOSITORY: nextjs-app
  IMAGE_TAG: latest

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Build Next.js app
        run: npm run build

      # Configure AWS credentials
      - name: Configure AWS credentials
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set default.region $AWS_REGION

      # Login to ECR
      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY

      # Build, Tag, and Push Docker image
      - name: Build, Tag, and Push Docker image
        run: |
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      # Trivy Scan
      - name: Run Trivy Scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
          format: 'table'
          exit-code: '0'
          severity: 'CRITICAL,HIGH'
